%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: fidelityLambdaAll.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 123 554 423 801
%%DocumentFonts: Helvetica CMR17 CMMI12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips fidelityLambdaAll.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.07.07:1435
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks 97 - Version 97, 93/05/07.
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
% END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro
%!
% PostScript header file pst-text.pro
% Version 97, 94/04/20
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
  String length
  { String CharCount 1 getinterval ShowChar
    /CharCount CharCount 1 add def
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
    currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 21 /lambda put
dup 70 /F put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueXX 5087386 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7bcb09b7064e91fa0ded228e42
09aae407a7aaca60b1076299ac4abd23ef02f108765f0e3d91f92f3afbfded37
2fcf6e4b1416901517da8f2fb3c9fe7a87bcbe6fd36cd5b5823fdb74229036a6
3c3346a1093e6b1036902c1bf42fc317c80abf04020a47b344c36de42f05c490
a0ff44ab6d5249e9f552a8707bb7661e242644814001c8430ebd5e5f0b944ceb
666ee64359d663e355b2f17093a964139d17287f6ca6a024767eba4fe4873855
babe2f07b91560f68300b06dfe27264c163195d446980c35bca0b48f7806626a
e72636593a05ba403ce1c0f8b2cea3ecd586e90ac17d034ba4af708304f23131
3459fbbbfb97d4834d0395754ab3f22d6495d2144087d448616fa1ce27bc50d3
46543287e3860d99b433624119bb9920a2113604c0e260fd275ba55e0fd19c83
e19addc3baa1f32f6b7284038845ccee71a3311ddb17b84975f7a984bed7c6ec
2a06e5b335a763d081c6273f86a46632fd9141a27902074fc860df3a2eb59b89
774c767022dbb577e30da128bd7706a43af886d0c256b50fa968ef06776aac0b
a5387e9011eb2334c1f42c090f06a1125c207ea6324e87f46414050d88070346
7b9a6e4d2045feac295d15ca55b900da594770ed9843365bbc81bff2190b731b
8790385f7c313b4f64683aededa87b8c04da713754a05b7ad08b814b94b7be0a
5f20abfa50f767a51aa084b330955da5231cf6660a76c929e56afc63797a999f
757018dd00ca061ace2eae761c8e56838535e4f0dde8afaf899c418727ddfd13
eaf227fd767d803230aa511e59084b0bec6f25be7f9735a206bcd4c2cb995c71
9a1e5113fa46ad32078fd413b9eb00326535082583bbae634448f87ea0db6834
8950ffd2307a5251b3de8495b9f317a8ce9f8e692028f8430711d13531ac0aac
548a46bdc4288515a6916f331c4abe5e37bafa749ae9c2dc507b2662ecc4c86c
50687411105aca8a48858915943aa97d1079d4e747823a607dde4e4112357f8c
3256c203ed6ec2dc82e669e56c2a7942d4dcfc9b985d13a5afc9f6f992d97781
3f44f6eb48ac80e9e8cc5d8b9218c6a63c722657a55363eff17bf4bf517e955c
e9dc7d24f1e4b1558be3b981472a595be7bc6258eba6fa6633c0faa17f868d43
98b369c907f1d125bfa4434f045af0a043459abacd40f56781115934b1244a9f
7372dc59340a41c7cca9ccac42a4021cff55728a2625cf1934ebb3cb10b654bf
6b4b236f41d8d4337d4dd60521e60c6289e0c20634611179f6e40b09db15099b
6b999838175c756859a86c75cde86bc32dcb8fc8922c773ee4304f53f041ac34
a2577941c84ef209151508d52be38aa43610cc8940d14da36dbafa46e371b449
099c03426322bfebda7b874152e3ac343bc78bac9ab19d27dbe18bd37914bbc5
ce3aecd19359ca4d46df541b4efd2089be34d97f0e1912bc0f1e560e7c29f1eb
488f49f738b9954882566338c535ec287de93126254297380d67179deb8ff1e9
9d53ead3247655112389d8772708d74c882536b6969266ef00a85e109d940a8c
d7ba9518f869aaa91485d661905f3c5b33250710766fdb0ef23eddfdbc98
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /macron put
readonly def
/FontBBox{-33 -250 945 749}readonly def
/UniqueXX 5000795 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be356c29c3aec91ef17f5d31183b1e489f1fa
559a6693fbdd04d4f7e99886d8cb7cca13d4aa9ceb34a708af22e69ccef0e504
c3997075243585edf60b6447c8d01cffb04b6e3ddbaa7da5891286861322a795
e9d990fd56af2f5c2b35801a0b07874e4ac3170481d232e150443253c92a8b05
513d4a4154a99d91f629ccd30376500f5d16aaa9b203bad6350e4b19424c0e33
75f2949bc1927a6f6221252f8a96618e646aa1b0810753c98becc26b37837775
24bca72b818d314074c1c91f4e1f4148d3d703d12d179ee6970bd55d04aa9a9d
97f63f2c7dbd129ec2ed3ba5f8080270ea5854ea165dbcc061e2f47f1aaf0997
2ac9a689a2a9620b91b53f6b5092884372f5f7afca495f331138d85a97c5bb83
d8072dc88010fc89108b60bc06d4f93c722e8908d7ce3c1ea3c70e9e65edd769
7db17ce0e012ad37d4030f33d30a73fd655b7a2e572f3378ac933dd75082f2f1
68702be19bc60cef6bd5f0ada180d21408c04b7f7db9b6dbaefe09e809a80ddf
a5366d10930d3e68ca53e4721ff525853f4c784f2c2c3aa0129a34d9df00debc
ae4037e4c0fbdce3989f35964b4c07e7817b805bfe8c15f0c0ebf226cff606b6
2954f0f42dff8c214a6537ab666d25389c44db7b5866440bbfc137712bcdcc89
c68cd1adfd85648b1ed29bfb45a564b02172137feef782d604e0d7e1f1737c96
719cca9e4b9dfdc87e5999b886a15ac572183dfafd8c4176cd98430c204d4e7c
e989e1dea814d3088a21d9ae6c5fe7ab3d399b2982fd605e65509a8ed6790c21
a08a23e53dbe70f676d0e7b2e8261b092dc3415ac785635d133d309ac670c0c5
5868fd863ce42542ff1e83e1fa20a7a0e5d680dec3a22700f7f48d2582b8411d
757d17ab7530ceec0c6727c6a80f2493196b0b36e727bd664f9dbd15c4d94ccf
f16be5f1991437cf17f18b28051d44b7a4c52a151008b7054f21a283c061b2ec
336d0b4641b6a3efe928b744abec9395b0d45278e3f7589d4892092f6c63326b
b6f60424a22fe676d9ee2b32be0179b192d8a18a6e32e3a1274dfcdcdc486026
a8f5d65bb7a15769f8079e1225a1c9b81962eac3a45a9bf34e558a42524bdce2
3730f02930b506fb4892ecd4b94b4ca2b8696943f740993939b8dbce020189a6
2d33b7ef4fa4bab132f7ceceb32235c2048713aea44f8de2db5d86f0f0fb6826
3f31a71de0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (fidelityLambdaAll.dvi)
@start /Fa 185[91 48[82 21[{}2 143.462 /CMMI12 rf /Fb
233[66 22[{}1 143.462 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 565 1629 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true -19.91682 -22.76227
290.2179 233.31241 .5 Frame  gsave 1. setgray fill grestore end
 
@endspecial
@beginspecial 57 @llx 201 @lly 548 @urx 595 @ury 2834
@rwi @setspecial
%%BeginDocument: fidelityLambdaAll.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: fidelityLambdaAll.eps
%%CreationDate: 04/27/ 2  12:21:14
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: 1
%%BoundingBox:    57   201   548   595
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 160 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath eofill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	currentlinecap 1 setlinecap 3 1 roll 2 copy moveto lineto stroke setlinecap
	} bdef

/FA {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arc
	tMatrix setmatrix
	stroke
	} bdef
/PA {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arc
	closepath
	tMatrix setmatrix
	fill
	} bdef

/FAn {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 5 -2 roll arcn
	tMatrix setmatrix
	stroke
	} bdef
/PAn {
	newpath
	tMatrix currentmatrix pop
	translate 0 0 moveto scale
	0 0 1 5 -2 roll arcn
	closepath
	tMatrix setmatrix
	fill
	} bdef

/vradius 0 def
/hradius 0 def
/lry 0 def
/lrx 0 def
/uly 0 def
/ulx 0 def
/rad 0 def

/MRR {
	/vradius xdef
	/hradius xdef
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	newpath
	tMatrix currentmatrix pop
	ulx hradius add uly vradius add translate
	hradius vradius scale
	0 0 1 180 270 arc 
	tMatrix setmatrix
	lrx hradius sub uly vradius add translate
	hradius vradius scale
	0 0 1 270 360 arc
	tMatrix setmatrix
	lrx hradius sub lry vradius sub translate
	hradius vradius scale
	0 0 1 0 90 arc
	tMatrix setmatrix
	ulx hradius add lry vradius sub translate
	hradius vradius scale
	0 0 1 90 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FRR {
	MRR stroke } bdef
/PRR {
	MRR fill } bdef

/MlrRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lry uly sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 90 270 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 270 90 arc
	tMatrix setmatrix
	closepath
	} bdef
/FlrRR {
	MlrRR stroke } bdef
/PlrRR {
	MlrRR fill } bdef

/MtbRR {
	/lry xdef
	/lrx xdef
	/uly xdef
	/ulx xdef
	/rad lrx ulx sub 2 div def
	newpath
	tMatrix currentmatrix pop
	ulx rad add uly rad add translate
	rad rad scale
	0 0 1 180 360 arc
	tMatrix setmatrix
	lrx rad sub lry rad sub translate
	rad rad scale
	0 0 1 0 180 arc
	tMatrix setmatrix
	closepath
	} bdef
/FtbRR {
	MtbRR stroke } bdef
/PtbRR {
	MtbRR fill } bdef

currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    57   201   548   595
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  474   204  5897  4724 MR c np
93 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
c0
1 j
1 sg
   0    0 6914 5187 PR
6 w
0 4226 5356 0 0 -4226 899 4615 4 MP
PP
-5356 0 0 4226 5356 0 0 -4226 899 4615 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899 4615 mt 6255 4615 L
 899  389 mt 6255  389 L
 899 4615 mt  899  389 L
6255 4615 mt 6255  389 L
 899 4615 mt 6255 4615 L
 899 4615 mt  899  389 L
 899 4615 mt  899 4561 L
 899  389 mt  899  443 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 240 FMSR

 833 4873 mt 
(0) s
1970 4615 mt 1970 4561 L
1970  389 mt 1970  443 L
1804 4873 mt 
(0.2) s
3041 4615 mt 3041 4561 L
3041  389 mt 3041  443 L
2875 4873 mt 
(0.4) s
4113 4615 mt 4113 4561 L
4113  389 mt 4113  443 L
3947 4873 mt 
(0.6) s
5184 4615 mt 5184 4561 L
5184  389 mt 5184  443 L
5018 4873 mt 
(0.8) s
6255 4615 mt 6255 4561 L
6255  389 mt 6255  443 L
6189 4873 mt 
(1) s
 899 4615 mt  953 4615 L
6255 4615 mt 6201 4615 L
 531 4704 mt 
(0.5) s
 899 3770 mt  953 3770 L
6255 3770 mt 6201 3770 L
 531 3859 mt 
(0.6) s
 899 2925 mt  953 2925 L
6255 2925 mt 6201 2925 L
 531 3014 mt 
(0.7) s
 899 2079 mt  953 2079 L
6255 2079 mt 6201 2079 L
 531 2168 mt 
(0.8) s
 899 1234 mt  953 1234 L
6255 1234 mt 6201 1234 L
 531 1323 mt 
(0.9) s
 899  389 mt  953  389 L
6255  389 mt 6201  389 L
 731  478 mt 
(1) s
 899 4615 mt 6255 4615 L
 899  389 mt 6255  389 L
 899 4615 mt  899  389 L
6255 4615 mt 6255  389 L
gs 899 389 5357 4227 MR c np
1 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 -1 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 5677 655 100 MP stroke
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 0 0 0 0 5665 660 100 MP stroke
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 -1 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 5652 665 100 MP stroke
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 -1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 -1 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 5638 670 100 MP stroke
0 0 1 0 0 0 0 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 -1 
0 0 1 0 0 0 5623 676 100 MP stroke
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 -1 5608 682 100 MP stroke
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 -1 0 0 5592 688 100 MP stroke
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 -1 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 5575 694 100 MP stroke
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 5558 701 100 MP stroke
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 0 0 1 0 5539 708 100 MP stroke
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 -1 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 5520 716 100 MP stroke
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 -1 5499 724 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 -1 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 0 0 1 0 5477 732 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 -1 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 1 0 0 0 5454 741 100 MP stroke
0 0 0 0 1 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 -1 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 5430 751 100 MP stroke
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 -1 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 -1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 0 0 -1 1 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
0 -1 0 0 1 0 5403 761 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
1 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 -1 
0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 -1 1 0 5375 772 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 -1 
0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 -1 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 
0 -1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 1 -1 0 0 0 0 1 0 0 0 0 0 
1 0 0 0 0 -1 0 0 1 0 0 0 0 0 1 0 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 -1 1 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 -1 0 0 0 0 0 0 
1 0 0 0 0 0 5346 783 100 MP stroke
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 1 0 0 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 1 0 0 0 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 -1 1 0 0 0 0 0 1 0 0 0 0 0 1 0 
0 -1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 
1 -1 0 0 0 0 5314 796 100 MP stroke
1 0 0 0 0 0 1 0 0 -1 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 -1 0 0 0 0 1 0 
0 0 0 0 1 0 0 -1 0 0 1 0 0 0 0 0 
1 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 -1 1 0 0 0 0 0 1 0 0 0 
0 0 1 0 0 -1 0 0 1 0 0 0 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 0 0 0 1 0 0 -1 
0 0 1 0 0 0 0 0 1 0 0 0 0 -1 1 0 
0 0 1 0 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 0 1 0 0 0 0 -1 1 0 0 0 1 0 
0 0 0 0 1 0 5279 809 100 MP stroke
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 0 0 0 0 1 0 0 0 0 -1 
1 0 0 0 0 0 1 0 0 0 1 0 0 -1 0 0 
1 0 0 0 0 0 1 0 0 -1 1 0 0 0 0 0 
1 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 0 
1 0 0 0 0 -1 1 0 0 0 0 0 1 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
1 -1 0 0 0 0 1 0 0 0 0 0 1 0 0 -1 
1 0 0 0 0 0 1 0 0 0 0 -1 1 0 0 0 
1 0 0 0 0 0 1 0 0 -1 0 0 1 0 0 0 
1 0 0 0 0 0 1 -1 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 5242 824 100 MP stroke
0 0 0 0 1 0 0 -1 0 0 1 0 0 0 1 0 
0 0 0 0 1 -1 0 0 1 0 0 0 0 0 1 0 
0 -1 1 0 0 0 0 0 1 0 0 0 0 0 1 -1 
0 0 1 0 0 0 0 0 1 0 0 -1 1 0 0 0 
0 0 1 0 0 0 1 0 0 -1 0 0 1 0 0 0 
1 0 0 0 0 -1 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 0 0 0 0 1 0 0 -1 1 0 
0 0 0 0 1 0 0 0 1 0 0 -1 1 0 0 0 
0 0 1 0 0 0 1 -1 0 0 0 0 1 0 0 0 
1 0 0 -1 0 0 1 0 0 0 1 0 0 0 0 -1 
1 0 0 0 1 0 0 0 1 0 0 -1 0 0 1 0 
0 0 1 0 0 0 0 -1 1 0 0 0 1 0 0 0 
1 0 0 0 0 -1 5203 840 100 MP stroke
1 0 0 0 1 0 0 0 0 0 1 -1 0 0 1 0 
0 0 1 0 0 0 0 -1 1 0 0 0 1 0 0 0 
1 -1 0 0 0 0 1 0 0 0 1 0 0 -1 0 0 
1 0 0 0 1 0 0 0 1 -1 0 0 0 0 1 0 
0 0 1 0 0 -1 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 0 0 1 0 0 0 0 -1 1 0 
0 0 1 0 0 0 1 0 0 -1 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 0 0 1 -1 
0 0 1 0 0 0 1 0 0 0 1 -1 0 0 0 0 
1 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
0 -1 1 0 0 0 1 0 0 0 1 0 0 -1 1 0 
0 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
1 0 0 -1 1 0 5159 857 100 MP stroke
0 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 0 0 1 0 0 -1 1 0 
0 0 1 0 0 0 1 0 0 -1 1 0 0 0 1 0 
0 0 0 -1 1 0 0 0 1 0 0 0 1 0 0 -1 
1 0 0 0 1 0 0 0 1 -1 0 0 1 0 0 0 
0 0 1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 
0 0 1 0 0 0 1 0 0 -1 1 0 0 0 1 0 
0 0 1 -1 0 0 0 0 1 0 0 0 1 0 0 -1 
1 0 0 0 1 0 0 0 1 -1 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 
1 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
0 0 1 -1 0 0 1 0 0 0 1 0 0 -1 1 0 
0 0 1 0 0 0 5113 875 100 MP stroke
1 -1 0 0 1 0 0 0 1 0 0 -1 1 0 0 0 
1 0 0 0 1 -1 0 0 1 0 0 0 1 0 0 -1 
1 0 0 0 1 0 0 0 1 -1 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 
1 0 0 0 1 0 1 -1 0 0 1 0 0 0 1 0 
0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 1 0 
0 0 1 -1 0 0 1 0 0 0 1 0 0 -1 1 0 
0 0 1 0 0 0 1 -1 0 0 1 0 0 0 1 0 
0 -1 1 0 1 0 0 0 1 0 0 -1 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 
1 0 0 0 1 0 1 -1 0 0 1 0 0 0 1 -1 
0 0 1 0 0 0 1 0 0 -1 1 0 0 0 1 0 
1 0 0 -1 1 0 5061 896 100 MP stroke
0 0 1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 
0 0 1 0 1 0 0 0 1 -1 0 0 1 0 0 0 
1 -1 0 0 1 0 1 0 0 0 1 -1 0 0 1 0 
0 0 1 -1 0 0 1 0 0 0 1 0 1 -1 0 0 
1 0 0 0 1 -1 0 0 1 0 0 0 1 0 1 -1 
0 0 1 0 0 0 1 -1 0 0 1 0 1 0 0 0 
1 -1 0 0 1 0 0 0 1 -1 1 0 0 0 1 0 
0 -1 1 0 0 0 1 0 1 0 0 -1 1 0 0 0 
1 0 0 -1 1 0 1 0 0 0 1 -1 0 0 1 0 
0 0 1 0 1 -1 0 0 1 0 0 0 1 -1 0 0 
1 0 1 0 0 -1 1 0 0 0 1 0 1 -1 0 0 
1 0 0 0 1 0 1 -1 0 0 1 0 0 0 1 -1 
0 0 1 0 1 0 5005 918 100 MP stroke
0 -1 1 0 0 0 1 0 1 -1 0 0 1 0 0 0 
1 -1 1 0 0 0 1 0 0 0 1 -1 1 0 0 0 
1 0 0 -1 1 0 1 0 0 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 1 0 0 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 1 0 0 -1 1 0 1 0 0 0 
1 -1 1 0 0 0 1 0 0 -1 1 0 1 0 0 0 
1 -1 1 0 0 0 4944 943 100 MP stroke
1 0 1 -1 0 0 1 0 1 -1 0 0 1 0 1 0 
0 -1 1 0 1 0 0 0 1 -1 1 0 0 0 1 0 
1 -1 0 0 1 0 1 -1 0 0 1 0 1 0 0 -1 
1 0 1 0 0 0 1 -1 1 0 0 0 1 -1 1 0 
0 0 1 0 1 -1 0 0 1 0 1 0 0 -1 1 0 
1 0 0 -1 1 0 1 0 1 0 0 -1 1 0 1 0 
0 0 1 -1 1 0 0 0 1 -1 1 0 0 0 1 0 
1 -1 1 0 0 0 1 -1 1 0 0 0 1 0 1 -1 
0 0 1 0 1 -1 1 0 0 0 1 0 1 -1 0 0 
1 0 1 -1 0 0 1 0 1 0 1 -1 0 0 1 0 
1 -1 0 0 1 0 1 0 1 -1 0 0 1 0 1 -1 
0 0 1 0 1 0 1 -1 0 0 1 0 1 -1 0 0 
1 0 1 -1 1 0 4875 971 100 MP stroke
0 0 1 0 1 -1 1 0 0 0 1 -1 1 0 1 0 
0 0 1 -1 1 0 0 0 1 -1 1 0 1 0 0 -1 
1 0 1 0 1 0 0 -1 1 0 1 0 1 -1 0 0 
1 0 1 -1 1 0 0 0 1 0 1 -1 1 0 0 0 
1 -1 1 0 1 0 0 -1 1 0 1 0 1 -1 0 0 
1 0 1 0 1 -1 0 0 1 0 1 -1 1 0 0 0 
1 -1 1 0 1 0 1 -1 0 0 1 0 1 -1 1 0 
0 0 1 0 1 -1 1 0 1 0 0 -1 1 0 1 0 
1 -1 0 0 1 0 1 -1 1 0 1 0 0 -1 1 0 
1 0 1 -1 0 0 1 0 1 -1 1 0 1 0 0 0 
1 -1 1 0 1 0 1 -1 0 0 1 0 1 -1 1 0 
1 0 0 -1 1 0 1 0 1 -1 1 0 0 0 1 -1 
1 0 1 0 1 -1 4799 1002 100 MP stroke
0 0 1 0 1 -1 1 0 1 0 1 -1 0 0 1 0 
1 -1 1 0 1 0 0 -1 1 0 1 0 1 -1 1 0 
1 0 0 -1 1 0 1 0 1 -1 1 0 1 0 0 -1 
1 0 1 0 1 -1 1 0 1 0 0 -1 1 0 1 0 
1 -1 1 0 1 0 1 -1 0 0 1 -1 1 0 1 0 
1 -1 1 0 0 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 0 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 
0 0 1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 
0 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 0 0 1 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 0 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 0 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 0 4714 1036 100 MP stroke
1 -1 1 0 1 -1 1 0 0 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 0 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 0 0 -1 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 0 4618 1076 100 MP stroke
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 1 0 1 -1 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 2 -1 
1 0 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 2 -1 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 -1 2 0 1 -1 1 0 1 -1 1 0 1 -1 
1 0 1 -1 2 0 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 2 -1 1 0 1 -1 1 0 1 -1 1 0 
2 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 2 0 
1 -1 1 0 1 0 1 -1 1 0 2 -1 1 0 1 -1 
1 0 1 -1 2 0 4508 1121 100 MP stroke
1 -1 1 0 1 -1 1 0 2 -1 1 0 1 -1 1 0 
1 -1 1 0 2 -1 1 0 1 -1 1 0 2 -1 1 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 1 0 
2 -1 1 0 1 -1 1 0 2 -1 1 -1 1 0 1 -1 
2 0 1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 
2 0 1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 
2 0 1 -1 1 0 1 -1 2 -1 1 0 1 -1 2 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 2 -1 1 0 
1 -1 2 -1 1 0 1 -1 1 0 2 -1 1 0 1 -1 
2 0 1 -1 1 -1 2 0 1 -1 1 0 2 -1 1 0 
1 -1 2 0 1 -1 1 -1 2 0 1 -1 1 0 2 -1 
1 0 1 -1 2 0 1 -1 1 -1 2 0 1 -1 2 0 
1 -1 1 0 2 -1 4382 1174 100 MP stroke
1 -1 1 0 2 -1 1 0 2 -1 1 -1 1 0 2 -1 
1 0 1 -1 2 0 1 -1 2 -1 1 0 1 -1 2 0 
1 -1 2 -1 1 0 2 -1 1 0 1 -1 2 -1 1 0 
2 -1 1 0 1 -1 2 -1 1 0 2 -1 1 0 2 -1 
1 -1 2 0 1 -1 1 0 2 -1 1 -1 2 0 1 -1 
2 0 1 -1 2 -1 1 0 2 -1 1 -1 2 0 1 -1 
2 0 1 -1 1 -1 2 0 1 -1 2 -1 1 0 2 -1 
1 0 2 -1 1 -1 2 0 1 -1 2 -1 2 0 1 -1 
2 -1 1 0 2 -1 1 0 2 -1 1 -1 2 0 1 -1 
2 -1 1 0 2 -1 1 -1 2 0 2 -1 1 -1 2 0 
1 -1 2 -1 1 0 2 -1 1 -1 2 0 2 -1 1 -1 
2 0 1 -1 2 -1 2 0 1 -1 2 -1 1 0 2 -1 
2 -1 1 0 2 -1 4235 1236 100 MP stroke
1 -1 2 0 2 -1 1 -1 2 0 1 -1 2 -1 2 -1 
1 0 2 -1 2 -1 1 0 2 -1 2 -1 1 0 2 -1 
2 -1 1 -1 2 0 2 -1 1 -1 2 0 2 -1 1 -1 
2 -1 2 0 1 -1 2 -1 2 0 1 -1 2 -1 2 -1 
1 0 2 -1 2 -1 2 0 1 -1 2 -1 2 -1 1 0 
2 -1 2 -1 2 -1 1 0 2 -1 2 -1 2 -1 1 0 
2 -1 2 -1 2 -1 1 0 2 -1 2 -1 2 -1 1 0 
2 -1 2 -1 2 -1 2 0 1 -1 2 -1 2 -1 2 0 
2 -1 1 -1 2 -1 2 -1 2 0 2 -1 1 -1 2 -1 
2 0 2 -1 2 -1 2 -1 2 -1 1 0 2 -1 2 -1 
2 -1 2 -1 2 0 2 -1 1 -1 2 -1 2 -1 2 0 
2 -1 2 -1 2 -1 2 -1 2 0 1 -1 2 -1 2 -1 
2 -1 2 -1 2 0 4061 1310 100 MP stroke
2 -1 2 -1 2 -1 2 -1 2 -1 2 0 2 -1 2 -1 
1 -1 2 -1 2 -1 2 0 2 -1 2 -1 2 -1 2 -1 
2 -1 2 -1 2 0 2 -1 2 -1 2 -1 2 -1 2 -1 
2 -1 2 0 2 -1 2 -1 2 -1 2 -1 2 -1 3 -1 
2 -1 2 0 2 -1 2 -1 2 -1 2 -1 2 -1 2 -1 
2 -1 2 -1 2 -1 2 0 3 -1 2 -1 2 -1 2 -1 
2 -1 2 -1 2 -1 2 -1 3 -1 2 -1 2 -1 2 0 
2 -1 2 -1 2 -1 3 -1 2 -1 2 -1 2 -1 2 -1 
2 -1 3 -1 2 -1 2 -1 2 -1 2 -1 3 -1 2 -1 
2 -1 2 -1 3 -1 2 0 2 -1 2 -1 3 -1 2 -1 
2 -1 2 -1 3 -1 2 -1 2 -1 3 -1 2 -1 2 -1 
2 -1 3 -1 2 -1 2 -1 3 -1 2 -1 2 -1 3 -1 
2 -1 2 -1 3 -1 3850 1401 100 MP stroke
2 -1 2 -2 3 -1 2 -1 3 -1 2 -1 2 -1 3 -1 
2 -1 3 -1 2 -1 2 -1 3 -1 2 -1 3 -1 2 -1 
3 -1 2 -1 2 -1 3 -1 2 -2 3 -1 2 -1 3 -1 
2 -1 3 -1 2 -1 3 -1 2 -1 3 -1 2 -2 3 -1 
2 -1 3 -1 3 -1 2 -1 3 -1 2 -1 3 -1 2 -2 
3 -1 3 -1 2 -1 3 -1 2 -1 3 -1 3 -2 2 -1 
3 -1 2 -1 3 -1 3 -1 2 -2 3 -1 3 -1 2 -1 
3 -1 3 -1 3 -2 2 -1 3 -1 3 -1 2 -1 3 -2 
3 -1 3 -1 2 -1 3 -1 3 -2 3 -1 2 -1 3 -1 
3 -2 3 -1 3 -1 2 -1 3 -2 3 -1 3 -1 3 -1 
3 -2 2 -1 3 -1 3 -1 3 -2 3 -1 3 -1 3 -1 
3 -2 2 -1 3 -1 3 -2 3 -1 3 -1 3 -2 3 -1 
3 -1 3 -1 3 -2 3588 1517 100 MP stroke
3 -1 3 -1 3 -2 3 -1 3 -1 3 -2 3 -1 3 -2 
3 -1 3 -1 3 -2 3 -1 3 -1 4 -2 3 -1 3 -1 
3 -2 3 -1 3 -2 3 -1 3 -1 4 -2 3 -1 3 -2 
3 -1 3 -2 4 -1 3 -1 3 -2 3 -1 3 -2 4 -1 
3 -2 3 -1 3 -2 4 -1 3 -2 3 -1 4 -1 3 -2 
3 -1 4 -2 3 -1 3 -1 4 -2 3 -1 4 -2 3 -1 
3 -2 4 -1 3 -2 4 -1 3 -2 4 -1 3 -2 3 -1 
4 -2 3 -1 4 -2 3 -1 4 -2 4 -1 3 -2 4 -1 
3 -2 4 -1 3 -2 4 -1 4 -2 3 -1 4 -2 4 -1 
3 -2 4 -1 4 -2 3 -1 4 -2 4 -1 3 -2 4 -1 
4 -2 4 -1 3 -2 4 -2 4 -1 4 -2 4 -1 4 -2 
3 -1 4 -2 4 -1 4 -2 4 -1 4 -2 4 -1 4 -2 
4 -2 4 -1 4 -2 3247 1662 100 MP stroke
4 -1 4 -2 4 -1 4 -2 4 -2 4 -1 4 -2 4 -1 
4 -2 4 -2 4 -1 4 -2 5 -1 4 -2 4 -1 4 -2 
4 -2 5 -1 4 -2 4 -1 4 -2 5 -2 4 -1 4 -2 
5 -1 4 -2 4 -2 5 -1 4 -2 5 -1 4 -2 4 -2 
5 -1 4 -2 5 -2 4 -1 5 -2 4 -2 5 -1 5 -2 
4 -1 5 -2 4 -2 5 -1 5 -2 4 -1 5 -2 5 -2 
5 -1 4 -2 5 -2 5 -1 5 -2 5 -2 4 -1 5 -2 
5 -1 5 -2 5 -2 5 -1 5 -2 5 -2 5 -1 5 -2 
5 -2 5 -1 5 -2 5 -1 6 -2 5 -2 5 -1 5 -2 
5 -2 6 -1 5 -2 5 -2 5 -1 6 -2 5 -2 6 -1 
5 -2 5 -1 6 -2 5 -2 6 -1 5 -2 6 -2 6 -1 
5 -2 6 -2 6 -1 5 -2 6 -2 6 -1 6 -2 5 -1 
6 -2 6 -2 6 -1 2770 1822 100 MP stroke
6 -2 6 -2 6 -1 6 -2 6 -1 6 -2 6 -2 6 -1 
6 -2 7 -1 6 -2 6 -2 6 -1 7 -2 6 -1 6 -2 
7 -2 6 -1 7 -2 6 -1 7 -2 7 -1 6 -2 7 -1 
7 -2 6 -1 7 -2 7 -2 7 -1 7 -2 7 -1 7 -2 
7 -1 7 -2 7 -1 7 -2 8 -1 7 -2 7 -1 7 -2 
8 -1 7 -1 8 -2 7 -1 8 -2 8 -1 7 -2 8 -1 
8 -1 8 -2 8 -1 8 -2 8 -1 8 -1 8 -2 8 -1 
9 -1 8 -2 8 -1 9 -1 8 -1 9 -2 9 -1 8 -1 
9 -1 9 -2 9 -1 9 -1 9 -1 9 -1 10 -1 9 -2 
9 -1 10 -1 9 -1 10 -1 10 -1 10 -1 10 -1 10 -1 
10 -1 10 -1 11 -1 10 -1 11 -1 10 0 11 -1 11 -1 
11 -1 11 -1 12 0 11 -1 12 -1 12 -1 11 0 12 -1 
13 0 12 -1 13 0 1949 1949 100 MP stroke
12 -1 13 0 13 -1 14 0 13 -1 14 0 14 0 14 -1 
14 0 15 0 15 0 15 0 16 -1 15 0 17 0 16 0 
17 0 17 1 18 0 18 0 19 0 19 0 20 1 20 0 
21 0 22 1 22 0 24 1 24 0 26 1 27 1 29 0 
30 1 33 1 36 1 40 1 45 1 54 1 70 1 169 1 
899 1940 41 MP stroke
DA
1 0 0 0 0 -1 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 -1 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 5677 655 100 MP stroke
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 0 0 0 0 5665 660 100 MP stroke
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 -1 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 5652 665 100 MP stroke
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 -1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 -1 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 5638 670 100 MP stroke
0 0 1 0 0 0 0 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 -1 
0 0 1 0 0 0 5623 676 100 MP stroke
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 -1 5608 682 100 MP stroke
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 -1 0 0 5592 688 100 MP stroke
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 -1 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 5575 694 100 MP stroke
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 5558 701 100 MP stroke
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 0 0 1 0 5539 708 100 MP stroke
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 -1 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 5520 716 100 MP stroke
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 -1 5499 724 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 -1 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 0 0 1 0 5477 732 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 -1 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 1 0 0 0 5454 741 100 MP stroke
0 0 0 0 1 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 -1 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 5430 751 100 MP stroke
1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 -1 1 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 -1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 1 0 0 0 0 -1 1 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
0 -1 0 0 1 0 5403 761 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
1 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
1 0 0 0 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 0 0 0 1 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 -1 
0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 -1 1 0 5375 772 100 MP stroke
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 -1 
0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 -1 
1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 
0 -1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 0 0 1 0 
0 0 0 0 1 -1 0 0 0 0 1 0 0 0 0 0 
1 0 0 0 0 -1 0 0 1 0 0 0 0 0 1 0 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 -1 1 0 0 0 0 0 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 -1 0 0 0 0 0 0 
1 0 0 0 0 0 5346 783 100 MP stroke
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 1 0 0 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 1 0 0 0 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
0 -1 1 0 0 0 0 0 1 0 0 0 0 0 1 0 
0 -1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 
1 -1 0 0 0 0 5314 796 100 MP stroke
1 0 0 0 0 0 1 0 0 -1 0 0 1 0 0 0 
0 0 1 0 0 0 0 0 1 -1 0 0 0 0 1 0 
0 0 0 0 1 0 0 -1 0 0 1 0 0 0 0 0 
1 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 0 
0 0 1 0 0 -1 1 0 0 0 0 0 1 0 0 0 
0 0 1 0 0 -1 0 0 1 0 0 0 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 0 0 0 1 0 0 -1 
0 0 1 0 0 0 0 0 1 0 0 0 0 -1 1 0 
0 0 1 0 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 0 1 0 0 0 0 -1 1 0 0 0 1 0 
0 0 0 0 1 0 5279 809 100 MP stroke
0 0 0 -1 1 0 0 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 0 0 0 0 1 0 0 0 0 -1 
1 0 0 0 0 0 1 0 0 0 1 0 0 -1 0 0 
1 0 0 0 0 0 1 0 0 -1 1 0 0 0 0 0 
1 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 0 
1 0 0 0 0 -1 1 0 0 0 0 0 1 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 0 1 0 0 0 
1 -1 0 0 0 0 1 0 0 0 0 0 1 0 0 -1 
1 0 0 0 0 0 1 0 0 0 0 -1 1 0 0 0 
1 0 0 0 0 0 1 0 0 -1 0 0 1 0 0 0 
1 0 0 0 0 0 1 -1 0 0 1 0 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 5242 824 100 MP stroke
0 0 0 0 1 0 0 -1 0 0 1 0 0 0 1 0 
0 0 0 0 1 -1 0 0 1 0 0 0 0 0 1 0 
0 -1 1 0 0 0 0 0 1 0 0 0 0 0 1 -1 
0 0 1 0 0 0 0 0 1 0 0 -1 1 0 0 0 
0 0 1 0 0 0 1 0 0 -1 0 0 1 0 0 0 
1 0 0 0 0 -1 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 0 0 0 0 1 0 0 -1 1 0 
0 0 0 0 1 0 0 0 1 0 0 -1 1 0 0 0 
0 0 1 0 0 0 1 -1 0 0 0 0 1 0 0 0 
1 0 0 -1 0 0 1 0 0 0 1 0 0 0 0 -1 
1 0 0 0 1 0 0 0 1 0 0 -1 0 0 1 0 
0 0 1 0 0 0 0 -1 1 0 0 0 1 0 0 0 
1 0 0 0 0 -1 5203 840 100 MP stroke
1 0 0 0 1 0 0 0 0 0 1 -1 0 0 1 0 
0 0 1 0 0 0 0 -1 1 0 0 0 1 0 0 0 
1 -1 0 0 0 0 1 0 0 0 1 0 0 -1 0 0 
1 0 0 0 1 0 0 0 1 -1 0 0 0 0 1 0 
0 0 1 0 0 -1 1 0 0 0 1 0 0 0 0 0 
1 -1 0 0 1 0 0 0 1 0 0 0 0 -1 1 0 
0 0 1 0 0 0 1 0 0 -1 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 0 0 1 -1 
0 0 1 0 0 0 1 0 0 0 1 -1 0 0 0 0 
1 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
0 -1 1 0 0 0 1 0 0 0 1 0 0 -1 1 0 
0 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
1 0 0 -1 1 0 5159 857 100 MP stroke
0 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 0 0 1 0 0 -1 1 0 
0 0 1 0 0 0 1 0 0 -1 1 0 0 0 1 0 
0 0 0 -1 1 0 0 0 1 0 0 0 1 0 0 -1 
1 0 0 0 1 0 0 0 1 -1 0 0 1 0 0 0 
0 0 1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 
0 0 1 0 0 0 1 0 0 -1 1 0 0 0 1 0 
0 0 1 -1 0 0 0 0 1 0 0 0 1 0 0 -1 
1 0 0 0 1 0 0 0 1 -1 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 
1 0 0 0 1 0 0 -1 1 0 0 0 1 0 0 0 
0 0 1 -1 0 0 1 0 0 0 1 0 0 -1 1 0 
0 0 1 0 0 0 5113 875 100 MP stroke
1 -1 0 0 1 0 0 0 1 0 0 -1 1 0 0 0 
1 0 0 0 1 -1 0 0 1 0 0 0 1 0 0 -1 
1 0 0 0 1 0 0 0 1 -1 0 0 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 
1 0 0 0 1 0 1 -1 0 0 1 0 0 0 1 0 
0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 1 0 
0 0 1 -1 0 0 1 0 0 0 1 0 0 -1 1 0 
0 0 1 0 0 0 1 -1 0 0 1 0 0 0 1 0 
0 -1 1 0 1 0 0 0 1 0 0 -1 1 0 0 0 
1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 0 0 
1 0 0 0 1 0 1 -1 0 0 1 0 0 0 1 -1 
0 0 1 0 0 0 1 0 0 -1 1 0 0 0 1 0 
1 0 0 -1 1 0 5061 896 100 MP stroke
0 0 1 0 0 -1 1 0 0 0 1 0 0 0 1 -1 
0 0 1 0 1 0 0 0 1 -1 0 0 1 0 0 0 
1 -1 0 0 1 0 1 0 0 0 1 -1 0 0 1 0 
0 0 1 -1 0 0 1 0 0 0 1 0 1 -1 0 0 
1 0 0 0 1 -1 0 0 1 0 0 0 1 0 1 -1 
0 0 1 0 0 0 1 -1 0 0 1 0 1 0 0 0 
1 -1 0 0 1 0 0 0 1 -1 1 0 0 0 1 0 
0 -1 1 0 0 0 1 0 1 0 0 -1 1 0 0 0 
1 0 0 -1 1 0 1 0 0 0 1 -1 0 0 1 0 
0 0 1 0 1 -1 0 0 1 0 0 0 1 -1 0 0 
1 0 1 0 0 -1 1 0 0 0 1 0 1 -1 0 0 
1 0 0 0 1 0 1 -1 0 0 1 0 0 0 1 -1 
0 0 1 0 1 0 5005 918 100 MP stroke
0 -1 1 0 0 0 1 0 1 -1 0 0 1 0 0 0 
1 -1 1 0 0 0 1 0 0 0 1 -1 1 0 0 0 
1 0 0 -1 1 0 1 0 0 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 1 0 0 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
0 0 1 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 0 0 1 0 1 -1 0 0 1 0 
1 0 0 -1 1 0 1 0 0 -1 1 0 1 0 0 0 
1 -1 1 0 0 0 1 0 0 -1 1 0 1 0 0 0 
1 -1 1 0 0 0 4944 943 100 MP stroke
1 0 1 -1 0 0 1 0 1 -1 0 0 1 0 1 0 
0 -1 1 0 1 0 0 0 1 -1 1 0 0 0 1 0 
1 -1 0 0 1 0 1 -1 0 0 1 0 1 0 0 -1 
1 0 1 0 0 0 1 -1 1 0 0 0 1 -1 1 0 
0 0 1 0 1 -1 0 0 1 0 1 0 0 -1 1 0 
1 0 0 -1 1 0 1 0 1 0 0 -1 1 0 1 0 
0 0 1 -1 1 0 0 0 1 -1 1 0 0 0 1 0 
1 -1 1 0 0 0 1 -1 1 0 0 0 1 0 1 -1 
0 0 1 0 1 -1 1 0 0 0 1 0 1 -1 0 0 
1 0 1 -1 0 0 1 0 1 0 1 -1 0 0 1 0 
1 -1 0 0 1 0 1 0 1 -1 0 0 1 0 1 -1 
0 0 1 0 1 0 1 -1 0 0 1 0 1 -1 0 0 
1 0 1 -1 1 0 4875 971 100 MP stroke
0 0 1 0 1 -1 1 0 0 0 1 -1 1 0 1 0 
0 0 1 -1 1 0 0 0 1 -1 1 0 1 0 0 -1 
1 0 1 0 1 0 0 -1 1 0 1 0 1 -1 0 0 
1 0 1 -1 1 0 0 0 1 0 1 -1 1 0 0 0 
1 -1 1 0 1 0 0 -1 1 0 1 0 1 -1 0 0 
1 0 1 0 1 -1 0 0 1 0 1 -1 1 0 0 0 
1 -1 1 0 1 0 1 -1 0 0 1 0 1 -1 1 0 
0 0 1 0 1 -1 1 0 1 0 0 -1 1 0 1 0 
1 -1 0 0 1 0 1 -1 1 0 1 0 0 -1 1 0 
1 0 1 -1 0 0 1 0 1 -1 1 0 1 0 0 0 
1 -1 1 0 1 0 1 -1 0 0 1 0 1 -1 1 0 
1 0 0 -1 1 0 1 0 1 -1 1 0 0 0 1 -1 
1 0 1 0 1 -1 4799 1002 100 MP stroke
0 0 1 0 1 -1 1 0 1 0 1 -1 0 0 1 0 
1 -1 1 0 1 0 0 -1 1 0 1 0 1 -1 1 0 
1 0 0 -1 1 0 1 0 1 -1 1 0 1 0 0 -1 
1 0 1 0 1 -1 1 0 1 0 0 -1 1 0 1 0 
1 -1 1 0 1 0 1 -1 0 0 1 -1 1 0 1 0 
1 -1 1 0 0 0 1 -1 1 0 1 0 1 -1 1 0 
1 0 0 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 
0 0 1 -1 1 0 1 0 1 -1 1 0 1 0 1 -1 
0 0 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 0 0 1 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 0 -1 1 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 0 0 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 0 4714 1036 100 MP stroke
1 -1 1 0 1 -1 1 0 0 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 0 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 0 0 -1 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 
1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 1 0 1 0 1 -1 1 0 1 -1 
1 0 1 -1 1 0 4618 1076 100 MP stroke
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 1 0 1 -1 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 1 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 1 0 
1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 2 -1 
1 0 1 0 1 -1 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 2 -1 1 0 1 -1 1 0 1 0 1 -1 
1 0 1 -1 2 0 1 -1 1 0 1 -1 1 0 1 -1 
1 0 1 -1 2 0 1 0 1 -1 1 0 1 -1 1 0 
1 -1 1 0 2 -1 1 0 1 -1 1 0 1 -1 1 0 
2 -1 1 0 1 -1 1 0 1 -1 1 0 1 -1 2 0 
1 -1 1 0 1 0 1 -1 1 0 2 -1 1 0 1 -1 
1 0 1 -1 2 0 4508 1121 100 MP stroke
1 -1 1 0 1 -1 1 0 2 -1 1 0 1 -1 1 0 
1 -1 1 0 2 -1 1 0 1 -1 1 0 2 -1 1 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 1 0 
2 -1 1 0 1 -1 1 0 2 -1 1 -1 1 0 1 -1 
2 0 1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 
2 0 1 -1 1 0 1 -1 2 0 1 -1 1 0 1 -1 
2 0 1 -1 1 0 1 -1 2 -1 1 0 1 -1 2 0 
1 -1 1 0 1 -1 2 0 1 -1 1 0 2 -1 1 0 
1 -1 2 -1 1 0 1 -1 1 0 2 -1 1 0 1 -1 
2 0 1 -1 1 -1 2 0 1 -1 1 0 2 -1 1 0 
1 -1 2 0 1 -1 1 -1 2 0 1 -1 1 0 2 -1 
1 0 1 -1 2 0 1 -1 1 -1 2 0 1 -1 2 0 
1 -1 1 0 2 -1 4382 1174 100 MP stroke
1 -1 1 0 2 -1 1 0 2 -1 1 -1 1 0 2 -1 
1 0 1 -1 2 0 1 -1 2 -1 1 0 1 -1 2 0 
1 -1 2 -1 1 0 2 -1 1 0 1 -1 2 -1 1 0 
2 -1 1 0 1 -1 2 -1 1 0 2 -1 1 0 2 -1 
1 -1 2 0 1 -1 1 0 2 -1 1 -1 2 0 1 -1 
2 0 1 -1 2 -1 1 0 2 -1 1 -1 2 0 1 -1 
2 0 1 -1 1 -1 2 0 1 -1 2 -1 1 0 2 -1 
1 0 2 -1 1 -1 2 0 1 -1 2 -1 2 0 1 -1 
2 -1 1 0 2 -1 1 0 2 -1 1 -1 2 0 1 -1 
2 -1 1 0 2 -1 1 -1 2 0 2 -1 1 -1 2 0 
1 -1 2 -1 1 0 2 -1 1 -1 2 0 2 -1 1 -1 
2 0 1 -1 2 -1 2 0 1 -1 2 -1 1 0 2 -1 
2 -1 1 0 2 -1 4235 1236 100 MP stroke
1 -1 2 0 2 -1 1 -1 2 0 1 -1 2 -1 2 -1 
1 0 2 -1 2 -1 1 0 2 -1 2 -1 1 0 2 -1 
2 -1 1 -1 2 0 2 -1 1 -1 2 0 2 -1 1 -1 
2 -1 2 0 1 -1 2 -1 2 0 1 -1 2 -1 2 -1 
1 0 2 -1 2 -1 2 0 1 -1 2 -1 2 -1 1 0 
2 -1 2 -1 2 -1 1 0 2 -1 2 -1 2 -1 1 0 
2 -1 2 -1 2 -1 1 0 2 -1 2 -1 2 -1 1 0 
2 -1 2 -1 2 -1 2 0 1 -1 2 -1 2 -1 2 0 
2 -1 1 -1 2 -1 2 -1 2 0 2 -1 1 -1 2 -1 
2 0 2 -1 2 -1 2 -1 2 -1 1 0 2 -1 2 -1 
2 -1 2 -1 2 0 2 -1 1 -1 2 -1 2 -1 2 0 
2 -1 2 -1 2 -1 2 -1 2 0 1 -1 2 -1 2 -1 
2 -1 2 -1 2 0 4061 1310 100 MP stroke
2 -1 2 -1 2 -1 2 -1 2 -1 2 0 2 -1 2 -1 
1 -1 2 -1 2 -1 2 0 2 -1 2 -1 2 -1 2 -1 
2 -1 2 -1 2 0 2 -1 2 -1 2 -1 2 -1 2 -1 
2 -1 2 0 2 -1 2 -1 2 -1 2 -1 2 -1 3 -1 
2 -1 2 0 2 -1 2 -1 2 -1 2 -1 2 -1 2 -1 
2 -1 2 -1 2 -1 2 0 3 -1 2 -1 2 -1 2 -1 
2 -1 2 -1 2 -1 2 -1 3 -1 2 -1 2 -1 2 0 
2 -1 2 -1 2 -1 3 -1 2 -1 2 -1 2 -1 2 -1 
2 -1 3 -1 2 -1 2 -1 2 -1 2 -1 3 -1 2 -1 
2 -1 2 -1 3 -1 2 0 2 -1 2 -1 3 -1 2 -1 
2 -1 2 -1 3 -1 2 -1 2 -1 3 -1 2 -1 2 -1 
2 -1 3 -1 2 -1 2 -1 3 -1 2 -1 2 -1 3 -1 
2 -1 2 -1 3 -1 3850 1401 100 MP stroke
2 -1 2 -2 3 -1 2 -1 3 -1 2 -1 2 -1 3 -1 
2 -1 3 -1 2 -1 2 -1 3 -1 2 -1 3 -1 2 -1 
3 -1 2 -1 2 -1 3 -1 2 -2 3 -1 2 -1 3 -1 
2 -1 3 -1 2 -1 3 -1 2 -1 3 -1 2 -2 3 -1 
2 -1 3 -1 3 -1 2 -1 3 -1 2 -1 3 -1 2 -2 
3 -1 3 -1 2 -1 3 -1 2 -1 3 -1 3 -2 2 -1 
3 -1 2 -1 3 -1 3 -1 2 -2 3 -1 3 -1 2 -1 
3 -1 3 -1 3 -2 2 -1 3 -1 3 -1 2 -1 3 -2 
3 -1 3 -1 2 -1 3 -1 3 -2 3 -1 2 -1 3 -1 
3 -2 3 -1 3 -1 2 -1 3 -2 3 -1 3 -1 3 -1 
3 -2 2 -1 3 -1 3 -1 3 -2 3 -1 3 -1 3 -1 
3 -2 2 -1 3 -1 3 -2 3 -1 3 -1 3 -2 3 -1 
3 -1 3 -1 3 -2 3588 1517 100 MP stroke
3 -1 3 -1 3 -2 3 -1 3 -1 3 -2 3 -1 3 -2 
3 -1 3 -1 3 -2 3 -1 3 -1 4 -2 3 -1 3 -1 
3 -2 3 -1 3 -2 3 -1 3 -1 4 -2 3 -1 3 -2 
3 -1 3 -2 4 -1 3 -1 3 -2 3 -1 3 -2 4 -1 
3 -2 3 -1 3 -2 4 -1 3 -2 3 -1 4 -1 3 -2 
3 -1 4 -2 3 -1 3 -2 4 -1 3 -2 4 -2 3 -1 
3 -2 4 -1 3 -2 4 -1 3 -2 4 -1 3 -2 3 -1 
4 -2 3 -2 4 -1 3 -2 4 -1 4 -2 3 -2 4 -1 
3 -2 4 -1 3 -2 4 -2 4 -1 3 -2 4 -2 4 -1 
3 -2 4 -2 4 -1 3 -2 4 -2 4 -1 3 -2 4 -2 
4 -1 4 -2 3 -2 4 -1 4 -2 4 -2 4 -2 4 -1 
3 -2 4 -2 4 -2 4 -1 4 -2 4 -2 4 -2 4 -2 
4 -1 4 -2 4 -2 3247 1670 100 MP stroke
4 -2 4 -2 4 -1 4 -2 4 -2 4 -2 4 -2 4 -2 
4 -2 4 -1 4 -2 4 -2 5 -2 4 -2 4 -2 4 -2 
4 -2 5 -2 4 -2 4 -2 4 -2 5 -2 4 -1 4 -2 
5 -2 4 -2 4 -2 5 -2 4 -2 5 -3 4 -2 4 -2 
5 -2 4 -2 5 -2 4 -2 5 -2 4 -2 5 -2 5 -2 
4 -2 5 -3 4 -2 5 -2 5 -2 4 -2 5 -2 5 -2 
5 -3 4 -2 5 -2 5 -2 5 -3 5 -2 4 -2 5 -2 
5 -3 5 -2 5 -2 5 -2 5 -3 5 -2 5 -2 5 -3 
5 -2 5 -2 5 -3 5 -2 6 -3 5 -2 5 -2 5 -3 
5 -2 6 -3 5 -2 5 -3 5 -2 6 -3 5 -2 6 -3 
5 -2 5 -3 6 -2 5 -3 6 -3 5 -2 6 -3 6 -2 
5 -3 6 -3 6 -2 5 -3 6 -3 6 -3 6 -2 5 -3 
6 -3 6 -2 6 -3 2770 1891 100 MP stroke
6 -3 6 -3 6 -3 6 -3 6 -2 6 -3 6 -3 6 -3 
6 -3 7 -3 6 -3 6 -3 6 -3 7 -3 6 -3 6 -3 
7 -3 6 -3 7 -3 6 -3 7 -3 7 -4 6 -3 7 -3 
7 -3 6 -3 7 -4 7 -3 7 -3 7 -4 7 -3 7 -3 
7 -4 7 -3 7 -4 7 -3 8 -3 7 -4 7 -4 7 -3 
8 -4 7 -3 8 -4 7 -4 8 -3 8 -4 7 -4 8 -3 
8 -4 8 -4 8 -4 8 -4 8 -4 8 -4 8 -4 8 -4 
9 -4 8 -4 8 -4 9 -4 8 -4 9 -4 9 -5 8 -4 
9 -4 9 -4 9 -5 9 -4 9 -5 9 -4 10 -5 9 -4 
9 -5 10 -5 9 -5 10 -4 10 -5 10 -5 10 -5 10 -5 
10 -5 10 -5 11 -5 10 -6 11 -5 10 -5 11 -6 11 -5 
11 -6 11 -5 12 -6 11 -6 12 -5 12 -6 11 -6 12 -6 
13 -6 12 -7 13 -6 1949 2292 100 MP stroke
12 -6 13 -7 13 -7 14 -6 13 -7 14 -7 14 -7 14 -7 
14 -8 15 -7 15 -8 15 -8 16 -8 15 -8 17 -8 16 -9 
17 -8 17 -9 18 -9 18 -10 19 -9 19 -10 20 -11 20 -10 
21 -11 22 -12 22 -12 24 -12 24 -13 26 -13 27 -15 29 -15 
30 -16 33 -18 36 -19 40 -21 45 -25 54 -29 70 -38 169 -94 
899 2849 41 MP stroke
DD
1 0 0 0 0 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 -1 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 -1 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 -1 0 0 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 -1 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 -1 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 -1 0 0 0 0 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 -1 0 0 1 0 5677 845 100 MP stroke
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 -1 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 0 0 5665 855 100 MP stroke
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 -1 
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 -1 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 -1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 -1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 
0 0 0 0 0 0 5652 865 100 MP stroke
1 0 0 0 0 0 0 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 -1 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 -1 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 -1 0 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 5638 876 100 MP stroke
0 0 1 0 0 0 0 0 0 -1 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 -1 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 5623 887 100 MP stroke
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 -1 0 0 0 0 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 -1 0 0 1 0 0 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 5608 899 100 MP stroke
0 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 -1 
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 -1 
0 0 1 0 0 0 5592 912 100 MP stroke
0 0 0 0 0 0 0 0 1 -1 0 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
0 0 0 0 1 -1 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 -1 
0 0 1 0 0 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 5575 925 100 MP stroke
0 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 0 
0 0 1 -1 0 0 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 0 0 1 0 0 0 0 0 0 -1 
0 0 0 0 1 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 -1 0 0 1 0 0 0 
0 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 5558 939 100 MP stroke
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 0 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 1 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 0 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 0 0 -1 0 0 1 0 0 0 0 0 
0 0 0 -1 1 0 5539 954 100 MP stroke
0 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 
0 0 1 0 0 0 0 0 0 -1 0 0 1 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 0 0 
0 0 1 -1 0 0 0 0 0 0 0 0 1 0 0 -1 
0 0 0 0 0 0 1 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 -1 
0 0 1 0 0 0 0 0 0 0 0 0 1 -1 0 0 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 0 0 
1 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 0 0 -1 1 0 0 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 5520 969 100 MP stroke
0 0 1 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 1 0 0 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 1 0 0 0 0 -1 0 0 0 0 1 0 0 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 
0 0 1 0 0 0 5499 985 100 MP stroke
0 -1 0 0 0 0 1 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 0 0 1 -1 0 0 0 0 0 0 
1 0 0 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 0 0 1 -1 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 0 0 1 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 0 0 -1 
0 0 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
0 0 0 0 1 -1 5477 1003 100 MP stroke
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 0 0 0 0 -1 0 0 1 0 0 0 0 0 0 -1 
1 0 0 0 0 0 0 0 1 0 0 -1 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 1 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 -1 0 0 0 0 1 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 0 0 1 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 -1 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 0 0 1 0 0 0 0 -1 0 0 
0 0 1 0 0 0 0 -1 0 0 1 0 0 0 0 0 
0 -1 1 0 0 0 5454 1021 100 MP stroke
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 -1 0 0 1 0 0 0 0 0 0 -1 1 0 0 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 1 -1 0 0 0 0 0 0 1 0 
0 -1 0 0 0 0 1 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 0 -1 1 0 
0 0 0 0 0 0 5430 1040 100 MP stroke
1 -1 0 0 0 0 1 0 0 0 0 -1 0 0 1 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 -1 
0 0 0 0 1 0 0 0 0 -1 0 0 1 0 0 0 
0 0 1 -1 0 0 0 0 0 0 1 0 0 -1 0 0 
0 0 1 0 0 0 0 -1 0 0 1 0 0 0 0 -1 
0 0 1 0 0 0 0 0 1 -1 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 0 0 -1 1 0 
0 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 0 0 1 0 0 -1 0 0 1 0 0 0 
0 -1 0 0 1 0 5403 1061 100 MP stroke
0 0 0 0 0 -1 1 0 0 0 0 0 1 0 0 -1 
0 0 0 0 1 0 0 -1 0 0 1 0 0 0 0 0 
0 -1 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 -1 0 0 0 0 
1 0 0 0 0 -1 1 0 0 0 0 0 0 0 1 -1 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 -1 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 -1 0 0 1 0 0 0 0 0 1 -1 0 0 
0 0 0 0 1 -1 0 0 0 0 1 0 0 0 0 -1 
0 0 1 0 0 0 0 -1 1 0 0 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 -1 0 0 1 0 5375 1083 100 MP stroke
0 0 0 0 0 -1 1 0 0 0 0 0 1 -1 0 0 
0 0 1 0 0 -1 0 0 0 0 1 0 0 0 0 -1 
1 0 0 0 0 0 0 -1 1 0 0 0 0 0 1 -1 
0 0 0 0 1 0 0 -1 0 0 0 0 1 0 0 0 
0 -1 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 -1 0 0 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 1 -1 0 0 0 0 
1 0 0 -1 0 0 0 0 1 0 0 -1 0 0 1 0 
0 0 0 -1 1 0 0 0 0 0 0 0 1 -1 0 0 
0 0 1 0 0 -1 0 0 1 0 0 0 0 -1 1 0 
0 0 0 0 0 -1 1 0 0 0 0 0 1 -1 0 0 
0 0 1 0 0 -1 0 0 1 0 0 0 0 -1 0 0 
1 0 0 0 0 -1 5346 1107 100 MP stroke
1 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 -1 
0 0 1 0 0 0 0 0 0 -1 1 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 -1 0 0 1 0 0 0 
0 -1 1 0 0 0 0 0 1 -1 0 0 0 0 0 0 
1 -1 0 0 0 0 1 0 0 -1 0 0 1 0 0 -1 
0 0 1 0 0 0 0 -1 1 0 0 0 0 0 1 -1 
0 0 0 0 1 0 0 -1 0 0 1 0 0 0 0 -1 
1 0 0 0 0 0 0 -1 1 0 0 0 0 0 1 -1 
0 0 0 0 1 0 0 -1 0 0 1 0 0 0 0 -1 
1 0 0 0 0 0 1 -1 0 0 0 0 1 0 0 -1 
0 0 1 0 0 -1 0 0 1 0 0 0 0 -1 1 0 
0 0 0 0 1 -1 0 0 0 0 1 0 0 -1 0 0 
1 0 0 0 0 -1 5314 1132 100 MP stroke
1 0 0 0 0 -1 1 0 0 0 0 0 1 -1 0 0 
0 0 1 0 0 -1 0 0 1 0 0 0 0 -1 1 0 
0 0 0 -1 1 0 0 0 0 0 1 -1 0 0 0 0 
1 0 0 -1 0 0 1 0 0 0 0 -1 1 0 0 0 
0 -1 1 0 0 0 1 0 0 -1 0 0 1 0 0 0 
0 -1 1 0 0 0 0 -1 1 0 0 0 0 0 1 -1 
0 0 0 0 1 0 0 -1 0 0 1 0 0 -1 0 0 
1 0 0 0 0 -1 1 0 0 0 1 0 0 -1 0 0 
1 0 0 -1 0 0 1 0 0 0 0 -1 1 0 0 0 
0 0 1 -1 0 0 0 0 1 -1 0 0 0 0 1 0 
0 -1 1 0 0 0 0 -1 1 0 0 0 0 0 1 -1 
0 0 0 0 1 -1 0 0 0 0 1 0 0 -1 1 0 
0 0 0 0 1 -1 5279 1159 100 MP stroke
0 0 0 0 1 -1 0 0 0 0 1 0 0 -1 0 0 
1 0 0 -1 1 0 0 0 0 0 1 -1 0 0 0 0 
1 -1 0 0 0 0 1 0 0 -1 1 0 0 0 0 -1 
1 0 0 0 0 -1 1 0 0 0 1 0 0 -1 0 0 
1 0 0 -1 0 0 1 0 0 0 0 -1 1 0 0 0 
1 -1 0 0 0 0 1 0 0 -1 0 0 1 0 0 -1 
1 0 0 0 0 -1 1 0 0 0 0 0 1 -1 0 0 
1 0 0 -1 0 0 1 0 0 0 0 -1 1 0 0 0 
1 -1 0 0 0 0 1 -1 0 0 0 0 1 0 0 -1 
1 0 0 0 0 -1 1 0 0 0 0 -1 1 0 0 0 
1 0 0 -1 0 0 1 0 0 -1 1 0 0 0 0 -1 
1 0 0 0 0 0 1 -1 0 0 1 0 0 -1 0 0 
1 0 0 -1 1 0 5242 1188 100 MP stroke
0 0 0 -1 1 0 0 0 0 0 1 -1 0 0 1 0 
0 -1 0 0 1 0 0 -1 1 0 0 0 0 -1 1 0 
0 0 1 0 0 -1 0 0 1 0 0 -1 0 0 1 0 
0 -1 1 0 0 0 0 -1 1 0 0 0 1 0 0 -1 
0 0 1 0 0 -1 1 0 0 0 0 -1 1 0 0 0 
1 -1 0 0 0 0 1 -1 0 0 1 0 0 -1 0 0 
1 0 0 0 1 -1 0 0 0 0 1 -1 0 0 1 0 
0 -1 0 0 1 0 0 -1 1 0 0 0 1 -1 0 0 
0 0 1 -1 0 0 1 0 0 -1 0 0 1 0 0 -1 
1 0 0 0 0 0 1 -1 0 0 1 0 0 -1 0 0 
1 0 0 -1 1 0 0 0 1 -1 0 0 0 0 1 -1 
0 0 1 0 0 -1 0 0 1 0 0 -1 1 0 0 0 
1 -1 0 0 0 0 5203 1219 100 MP stroke
1 -1 0 0 1 0 0 -1 0 0 1 0 0 -1 1 0 
0 0 1 -1 0 0 0 0 1 -1 0 0 1 0 0 -1 
1 0 0 0 0 -1 1 0 0 0 1 -1 0 0 0 0 
1 -1 0 0 1 0 0 -1 1 0 0 0 0 -1 1 0 
0 0 1 -1 0 0 1 0 0 -1 1 0 0 0 0 -1 
1 0 0 0 1 -1 0 0 1 0 0 -1 0 0 1 0 
0 -1 1 0 0 -1 1 0 0 0 0 -1 1 0 0 0 
1 -1 0 0 1 0 0 -1 1 0 0 0 0 -1 1 0 
0 0 1 -1 0 0 1 0 0 -1 1 0 0 0 0 -1 
1 0 0 -1 1 0 0 0 1 -1 0 0 1 0 0 -1 
0 0 1 0 0 -1 1 0 0 0 1 -1 0 0 1 0 
0 -1 0 0 1 -1 0 0 1 0 0 -1 1 0 0 0 
1 -1 0 0 1 0 5159 1253 100 MP stroke
0 -1 0 0 1 0 0 -1 1 0 0 -1 1 0 0 0 
1 -1 0 0 1 0 0 -1 0 0 1 0 0 -1 1 0 
0 -1 1 0 0 0 1 -1 0 0 1 0 0 -1 1 0 
0 0 0 -1 1 0 0 -1 1 0 0 0 1 -1 0 0 
1 0 0 -1 1 0 0 0 1 -1 0 0 1 -1 0 0 
0 0 1 -1 0 0 1 0 0 -1 1 0 0 -1 1 0 
0 0 1 -1 0 0 1 0 0 -1 1 0 0 -1 1 0 
0 0 1 -1 0 0 0 0 1 -1 0 0 1 -1 0 0 
1 0 0 -1 1 0 0 0 1 -1 0 0 1 -1 0 0 
1 0 0 -1 1 0 0 -1 1 0 0 0 1 -1 0 0 
1 0 0 -1 1 0 0 -1 1 0 0 0 1 -1 0 0 
0 -1 1 0 0 0 1 -1 0 0 1 0 0 -1 1 0 
0 -1 1 0 0 0 5113 1290 100 MP stroke
1 -1 0 0 1 -1 0 0 1 0 0 -1 1 0 0 -1 
1 0 0 0 1 -1 0 0 1 0 0 -1 1 0 0 -1 
1 0 0 0 1 -1 0 0 1 -1 0 0 1 0 0 -1 
1 0 0 -1 1 0 0 0 1 -1 0 0 1 -1 0 0 
1 0 0 -1 1 0 1 -1 0 0 1 0 0 -1 1 0 
0 -1 1 0 0 0 1 -1 0 0 1 -1 0 0 1 -1 
0 0 1 0 0 -1 1 0 0 -1 1 0 0 0 1 -1 
0 0 1 -1 0 0 1 0 0 -1 1 0 0 -1 1 0 
0 0 1 -1 1 0 0 -1 1 0 0 -1 1 0 0 0 
1 -1 0 0 1 -1 0 0 1 0 0 -1 1 0 0 -1 
1 0 0 -1 1 0 1 0 0 -1 1 0 0 -1 1 0 
0 -1 1 0 0 0 1 -1 0 0 1 -1 0 0 1 0 
1 -1 0 0 1 -1 5061 1331 100 MP stroke
0 0 1 -1 0 0 1 0 0 -1 1 0 0 -1 1 0 
0 -1 1 0 1 0 0 -1 1 0 0 -1 1 0 0 -1 
1 0 0 -1 1 0 1 0 0 -1 1 0 0 -1 1 0 
0 -1 1 0 0 0 1 -1 0 0 1 -1 1 0 0 -1 
1 0 0 0 1 -1 0 0 1 -1 0 0 1 -1 1 0 
0 -1 1 0 0 0 1 -1 0 0 1 -1 1 0 0 -1 
1 0 0 -1 1 0 0 0 1 -1 1 0 0 -1 1 0 
0 -1 1 0 0 -1 1 0 1 -1 0 0 1 0 0 -1 
1 0 0 -1 1 0 1 -1 0 0 1 -1 0 0 1 -1 
0 0 1 0 1 -1 0 0 1 -1 0 0 1 -1 0 0 
1 -1 1 0 0 -1 1 0 0 0 1 -1 1 0 0 -1 
1 0 0 -1 1 0 1 -1 0 0 1 -1 0 0 1 -1 
0 0 1 -1 1 0 5005 1375 100 MP stroke
0 0 1 -1 0 0 1 -1 1 0 0 -1 1 0 0 -1 
1 0 1 -1 0 0 1 -1 0 0 1 -1 1 0 0 -1 
1 0 0 -1 1 0 1 0 0 -1 1 0 0 -1 1 0 
1 -1 0 0 1 -1 1 0 0 -1 1 0 0 -1 1 0 
1 -1 0 0 1 -1 0 0 1 -1 1 0 0 -1 1 0 
0 -1 1 0 1 -1 0 0 1 -1 1 0 0 -1 1 0 
0 -1 1 0 1 0 0 -1 1 0 1 -1 0 0 1 -1 
0 0 1 -1 1 0 0 -1 1 0 1 -1 0 0 1 -1 
0 0 1 -1 1 0 0 -1 1 0 1 -1 0 0 1 -1 
1 0 0 -1 1 0 0 -1 1 0 1 -1 0 0 1 -1 
1 0 0 -1 1 -1 1 0 0 -1 1 0 1 -1 0 0 
1 -1 1 0 0 -1 1 0 0 -1 1 0 1 -1 0 0 
1 -1 1 0 0 -1 4944 1424 100 MP stroke
1 0 1 -1 0 0 1 -1 1 0 0 -1 1 0 1 -1 
0 0 1 -1 1 0 0 -1 1 0 1 -1 0 -1 1 0 
1 -1 0 0 1 -1 1 0 0 -1 1 0 1 -1 0 0 
1 -1 1 0 0 -1 1 0 1 -1 0 0 1 -1 1 -1 
0 0 1 -1 1 0 0 -1 1 0 1 -1 0 0 1 -1 
1 0 0 -1 1 0 1 -1 1 -1 0 0 1 -1 1 0 
0 -1 1 0 1 -1 0 0 1 -1 1 0 0 -1 1 0 
1 -1 1 -1 0 0 1 -1 1 0 0 -1 1 0 1 -1 
0 0 1 -1 1 -1 1 0 0 -1 1 0 1 -1 0 0 
1 -1 1 0 0 -1 1 -1 1 0 1 -1 0 0 1 -1 
1 0 0 -1 1 0 1 -1 1 -1 0 0 1 -1 1 0 
0 -1 1 0 1 -1 1 -1 0 0 1 -1 1 0 0 -1 
1 0 1 -1 1 -1 4875 1478 100 MP stroke
0 0 1 -1 1 0 1 -1 0 0 1 -1 1 -1 1 0 
0 -1 1 0 1 -1 0 -1 1 0 1 -1 1 0 0 -1 
1 0 1 -1 1 -1 0 0 1 -1 1 0 1 -1 0 -1 
1 0 1 -1 1 0 0 -1 1 0 1 -1 1 -1 0 0 
1 -1 1 0 1 -1 0 -1 1 0 1 -1 1 0 0 -1 
1 -1 1 0 1 -1 0 0 1 -1 1 -1 1 0 0 -1 
1 0 1 -1 1 -1 1 0 0 -1 1 0 1 -1 1 -1 
0 0 1 -1 1 -1 1 0 1 -1 0 0 1 -1 1 -1 
1 0 0 -1 1 0 1 -1 1 -1 1 0 0 -1 1 -1 
1 0 1 -1 0 0 1 -1 1 -1 1 0 1 -1 0 -1 
1 0 1 -1 1 0 1 -1 0 -1 1 0 1 -1 1 -1 
1 0 0 -1 1 0 1 -1 1 -1 1 0 0 -1 1 -1 
1 0 1 -1 1 -1 4799 1538 100 MP stroke
0 0 1 -1 1 0 1 -1 1 -1 1 0 0 -1 1 -1 
1 0 1 -1 1 -1 0 0 1 -1 1 -1 1 0 1 -1 
1 -1 0 0 1 -1 1 -1 1 0 1 -1 1 0 0 -1 
1 -1 1 0 1 -1 1 -1 1 0 0 -1 1 -1 1 0 
1 -1 1 -1 1 0 1 -1 0 -1 1 0 1 -1 1 -1 
1 0 1 -1 0 -1 1 0 1 -1 1 -1 1 0 1 -1 
1 -1 0 -1 1 0 1 -1 1 -1 1 0 1 -1 1 -1 
0 0 1 -1 1 -1 1 0 1 -1 1 -1 1 0 1 -1 
0 -1 1 0 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 
1 0 0 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 0 0 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 0 1 -1 0 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 4714 1605 100 MP stroke
1 0 1 -1 1 -1 1 -1 0 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 0 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 0 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 0 
1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 
1 -1 1 -1 1 -1 4618 1681 100 MP stroke
1 0 1 -1 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 
1 -1 1 -1 1 -1 2 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 -1 1 0 1 -1 1 -1 1 -1 1 -1 1 -1 
1 0 1 -1 1 -1 2 -1 1 -1 1 -1 1 0 1 -1 
1 -1 1 -1 1 -1 1 -1 1 -1 1 0 1 -1 2 -1 
1 -1 1 -1 1 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 -1 2 -1 1 -1 1 0 1 -1 1 -1 1 -1 
1 -1 1 -1 2 -1 1 -1 1 -1 1 0 1 -1 1 -1 
1 -1 1 -1 2 -1 1 -1 1 -1 1 -1 1 0 1 -1 
1 -1 1 -1 2 -1 1 -1 1 -1 1 -1 1 -1 1 -1 
2 0 1 -1 1 -1 1 -1 1 -1 1 -1 1 -1 2 -1 
1 -1 1 -1 1 -1 1 -1 1 0 2 -1 1 -1 1 -1 
1 -1 1 -1 2 -1 4508 1767 100 MP stroke
1 -1 1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 1 -1 
1 -1 1 0 2 -1 1 -1 1 -1 1 -1 2 -1 1 -1 
1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 1 -1 1 -1 
2 -1 1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 1 -1 
2 -1 1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 1 -1 
2 -1 1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 1 -1 
2 -1 1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 2 -1 
1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 2 -1 1 -1 
1 -1 2 -1 1 -1 1 -1 1 -1 2 -1 1 -1 1 -1 
2 -1 1 -1 1 -1 2 -1 1 -1 1 -1 2 -1 1 -1 
1 -1 2 -1 1 -1 1 -2 2 -1 1 -1 1 -1 2 -1 
1 -1 1 -1 2 -1 1 -1 1 -1 2 -1 1 -1 2 -1 
1 -1 1 -2 2 -1 4382 1867 100 MP stroke
1 -1 1 -1 2 -1 1 -1 2 -1 1 -1 1 -1 2 -1 
1 -1 1 -1 2 -2 1 -1 2 -1 1 -1 1 -1 2 -1 
1 -1 2 -1 1 -1 2 -2 1 -1 1 -1 2 -1 1 -1 
2 -1 1 -1 1 -1 2 -2 1 -1 2 -1 1 -1 2 -1 
1 -1 2 -1 1 -2 1 -1 2 -1 1 -1 2 -1 1 -1 
2 -1 1 -2 2 -1 1 -1 2 -1 1 -1 2 -1 1 -2 
2 -1 1 -1 1 -1 2 -1 1 -1 2 -2 1 -1 2 -1 
1 -1 2 -1 1 -1 2 -2 1 -1 2 -1 2 -1 1 -1 
2 -2 1 -1 2 -1 1 -1 2 -1 1 -2 2 -1 1 -1 
2 -1 1 -2 2 -1 1 -1 2 -1 2 -1 1 -2 2 -1 
1 -1 2 -1 1 -2 2 -1 1 -1 2 -1 2 -2 1 -1 
2 -1 1 -1 2 -2 2 -1 1 -1 2 -1 1 -2 2 -1 
2 -1 1 -1 2 -2 4235 1983 100 MP stroke
1 -1 2 -1 2 -1 1 -2 2 -1 1 -1 2 -2 2 -1 
1 -1 2 -1 2 -2 1 -1 2 -1 2 -2 1 -1 2 -1 
2 -2 1 -1 2 -1 2 -1 1 -2 2 -1 2 -1 1 -2 
2 -1 2 -1 1 -2 2 -1 2 -1 1 -2 2 -1 2 -1 
1 -2 2 -1 2 -1 2 -2 1 -1 2 -2 2 -1 1 -1 
2 -2 2 -1 2 -1 1 -2 2 -1 2 -1 2 -2 1 -1 
2 -2 2 -1 2 -1 1 -2 2 -1 2 -2 2 -1 1 -1 
2 -2 2 -1 2 -2 2 -1 1 -1 2 -2 2 -1 2 -2 
2 -1 1 -2 2 -1 2 -1 2 -2 2 -1 1 -2 2 -1 
2 -2 2 -1 2 -1 2 -2 2 -1 1 -2 2 -1 2 -2 
2 -1 2 -2 2 -1 2 -2 1 -1 2 -2 2 -1 2 -2 
2 -1 2 -2 2 -1 2 -2 2 -1 1 -2 2 -1 2 -2 
2 -1 2 -2 2 -1 4061 2120 100 MP stroke
2 -2 2 -1 2 -2 2 -1 2 -2 2 -1 2 -2 2 -1 
1 -2 2 -1 2 -2 2 -2 2 -1 2 -2 2 -1 2 -2 
2 -1 2 -2 2 -2 2 -1 2 -2 2 -1 2 -2 2 -1 
2 -2 2 -2 2 -1 2 -2 2 -1 2 -2 2 -2 3 -1 
2 -2 2 -1 2 -2 2 -2 2 -1 2 -2 2 -2 2 -1 
2 -2 2 -2 2 -1 2 -2 3 -2 2 -1 2 -2 2 -2 
2 -1 2 -2 2 -2 2 -1 3 -2 2 -2 2 -1 2 -2 
2 -2 2 -1 2 -2 3 -2 2 -2 2 -1 2 -2 2 -2 
2 -1 3 -2 2 -2 2 -2 2 -1 2 -2 3 -2 2 -2 
2 -1 2 -2 3 -2 2 -2 2 -1 2 -2 3 -2 2 -2 
2 -2 2 -1 3 -2 2 -2 2 -2 3 -2 2 -1 2 -2 
2 -2 3 -2 2 -2 2 -1 3 -2 2 -2 2 -2 3 -2 
2 -2 2 -2 3 -1 3850 2286 100 MP stroke
2 -2 2 -2 3 -2 2 -2 3 -2 2 -2 2 -2 3 -1 
2 -2 3 -2 2 -2 2 -2 3 -2 2 -2 3 -2 2 -2 
3 -2 2 -2 2 -1 3 -2 2 -2 3 -2 2 -2 3 -2 
2 -2 3 -2 2 -2 3 -2 2 -2 3 -2 2 -2 3 -2 
2 -2 3 -2 3 -2 2 -2 3 -2 2 -2 3 -2 2 -2 
3 -2 3 -2 2 -2 3 -2 2 -2 3 -3 3 -2 2 -2 
3 -2 2 -2 3 -2 3 -2 2 -2 3 -2 3 -2 2 -2 
3 -3 3 -2 3 -2 2 -2 3 -2 3 -2 2 -2 3 -2 
3 -3 3 -2 2 -2 3 -2 3 -2 3 -3 2 -2 3 -2 
3 -2 3 -2 3 -3 2 -2 3 -2 3 -2 3 -2 3 -3 
3 -2 2 -2 3 -2 3 -3 3 -2 3 -2 3 -3 3 -2 
3 -2 2 -2 3 -3 3 -2 3 -2 3 -3 3 -2 3 -2 
3 -3 3 -2 3 -2 3588 2493 100 MP stroke
3 -3 3 -2 3 -2 3 -3 3 -2 3 -3 3 -2 3 -2 
3 -3 3 -2 3 -3 3 -2 3 -2 4 -3 3 -2 3 -3 
3 -2 3 -3 3 -2 3 -3 3 -2 4 -3 3 -2 3 -3 
3 -2 3 -3 4 -2 3 -3 3 -2 3 -3 3 -2 4 -3 
3 -3 3 -2 3 -3 4 -2 3 -3 3 -3 4 -2 3 -3 
3 -2 4 -3 3 -3 3 -2 4 -3 3 -3 4 -2 3 -3 
3 -3 4 -2 3 -3 4 -3 3 -3 4 -2 3 -3 3 -3 
4 -2 3 -3 4 -3 3 -3 4 -3 4 -2 3 -3 4 -3 
3 -3 4 -3 3 -2 4 -3 4 -3 3 -3 4 -3 4 -3 
3 -3 4 -3 4 -2 3 -3 4 -3 4 -3 3 -3 4 -3 
4 -3 4 -3 3 -3 4 -3 4 -3 4 -3 4 -3 4 -3 
3 -3 4 -3 4 -3 4 -3 4 -3 4 -3 4 -4 4 -3 
4 -3 4 -3 4 -3 3247 2762 100 MP stroke
4 -3 4 -3 4 -4 4 -3 4 -3 4 -3 4 -3 4 -4 
4 -3 4 -3 4 -3 4 -4 5 -3 4 -3 4 -3 4 -4 
4 -3 5 -3 4 -4 4 -3 4 -4 5 -3 4 -3 4 -4 
5 -3 4 -4 4 -3 5 -3 4 -4 5 -3 4 -4 4 -3 
5 -4 4 -3 5 -4 4 -4 5 -3 4 -4 5 -3 5 -4 
4 -4 5 -3 4 -4 5 -4 5 -3 4 -4 5 -4 5 -3 
5 -4 4 -4 5 -4 5 -3 5 -4 5 -4 4 -4 5 -4 
5 -4 5 -3 5 -4 5 -4 5 -4 5 -4 5 -4 5 -4 
5 -4 5 -4 5 -4 5 -4 6 -4 5 -4 5 -4 5 -4 
5 -5 6 -4 5 -4 5 -4 5 -4 6 -5 5 -4 6 -4 
5 -4 5 -5 6 -4 5 -4 6 -5 5 -4 6 -4 6 -5 
5 -4 6 -5 6 -4 5 -5 6 -4 6 -5 6 -4 5 -5 
6 -4 6 -5 6 -5 2770 3139 100 MP stroke
6 -4 6 -5 6 -5 6 -5 6 -4 6 -5 6 -5 6 -5 
6 -5 7 -5 6 -4 6 -5 6 -5 7 -5 6 -5 6 -5 
7 -5 6 -6 7 -5 6 -5 7 -5 7 -5 6 -6 7 -5 
7 -5 6 -5 7 -6 7 -5 7 -6 7 -5 7 -6 7 -5 
7 -6 7 -5 7 -6 7 -6 8 -5 7 -6 7 -6 7 -6 
8 -5 7 -6 8 -6 7 -6 8 -6 8 -6 7 -6 8 -6 
8 -7 8 -6 8 -6 8 -6 8 -7 8 -6 8 -7 8 -6 
9 -7 8 -6 8 -7 9 -7 8 -6 9 -7 9 -7 8 -7 
9 -7 9 -7 9 -7 9 -7 9 -7 9 -7 10 -8 9 -7 
9 -7 10 -8 9 -8 10 -7 10 -8 10 -8 10 -8 10 -8 
10 -8 10 -8 11 -8 10 -8 11 -8 10 -9 11 -8 11 -9 
11 -9 11 -9 12 -9 11 -9 12 -9 12 -9 11 -9 12 -10 
13 -10 12 -9 13 -10 1949 3786 100 MP stroke
12 -10 13 -10 13 -11 14 -10 13 -11 14 -11 14 -11 14 -11 
14 -11 15 -12 15 -12 15 -12 16 -12 15 -12 17 -13 16 -13 
17 -13 17 -14 18 -14 18 -14 19 -15 19 -15 20 -16 20 -16 
21 -16 22 -17 22 -18 24 -19 24 -19 26 -20 27 -22 29 -23 
30 -24 33 -26 36 -28 40 -31 45 -36 54 -42 70 -55 169 -134 
899 4615 41 MP stroke
gr

DD
SO

end

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 472 659 a Fb(\026)439 696 y Fa(F)1752 1774
y(\025)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
